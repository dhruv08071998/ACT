// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5 (swiftlang-1300.0.31.1 clang-1300.0.29.1)
// swift-module-flags: -target arm64-apple-ios8.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name VirgilCryptoAPI
import Foundation
import Swift
@_exported import VirgilCryptoAPI
import _Concurrency
@objc(VSAAccessTokenSigner) public protocol AccessTokenSigner {
  @objc func generateTokenSignature(of token: Foundation.Data, using privateKey: VirgilCryptoAPI.PrivateKey) throws -> Foundation.Data
  @objc func verifyTokenSignature(_ signature: Foundation.Data, of token: Foundation.Data, with publicKey: VirgilCryptoAPI.PublicKey) -> Swift.Bool
  @objc func getAlgorithm() -> Swift.String
}
@objc(VSACardCrypto) public protocol CardCrypto {
  @objc func generateSignature(of data: Foundation.Data, using privateKey: VirgilCryptoAPI.PrivateKey) throws -> Foundation.Data
  @objc func verifySignature(_ signature: Foundation.Data, of data: Foundation.Data, with publicKey: VirgilCryptoAPI.PublicKey) -> Swift.Bool
  @objc func generateSHA512(for data: Foundation.Data) throws -> Foundation.Data
  @objc func importPublicKey(from data: Foundation.Data) throws -> VirgilCryptoAPI.PublicKey
  @objc func exportPublicKey(_ publicKey: VirgilCryptoAPI.PublicKey) throws -> Foundation.Data
}
@objc(VSAPrivateKey) public protocol PrivateKey {
}
@objc(VSAPrivateKeyExporter) public protocol PrivateKeyExporter {
  @objc func exportPrivateKey(privateKey: VirgilCryptoAPI.PrivateKey) throws -> Foundation.Data
  @objc func importPrivateKey(from data: Foundation.Data) throws -> VirgilCryptoAPI.PrivateKey
}
@objc(VSAPublicKey) public protocol PublicKey {
}
